/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.servicemaster.dialogs;

import com.servicemaster.data.SystemData;
import com.servicemaster.forms.MainFrame;
import com.servicemaster.functions.KeyCodeFunctions;
import com.servicemaster.guiFunctions.ButtonFunctions;
import com.servicemaster.listners.PaymentButtonActionListners;
import com.servicemaster.listners.PaymentButtonMouseListners;
import com.servicemaster.models.Invoice;
import com.servicemaster.models.Payment;
import com.servicemaster.models.PaymentType;
import com.servicemaster.models.Service;
import com.servicemaster.models.ServiceStatus;
import com.servicemaster.panels.CashSettlePanel;
import com.servicemaster.utils.HibernateUtil;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.util.Date;
import java.util.List;
import java.util.TreeMap;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author RuwanM
 */
public class SettlementDialog extends javax.swing.JDialog {

    private final Service service;
    private final Invoice invoice;
    private final TreeMap<String, ServiceStatus> serviceStatusMap;

    /**
     * Creates new form PaymentDialog
     *
     * @param parent
     * @param modal
     * @param service
     * @param invoice
     * @param serviceStatusMap
     */
    public SettlementDialog(java.awt.Frame parent, boolean modal, Service service, Invoice invoice, TreeMap<String, ServiceStatus> serviceStatusMap) {
        super(parent, modal);
        initComponents();
        this.service = service;
        this.invoice = invoice;
        this.serviceStatusMap = serviceStatusMap;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        toolBar = new javax.swing.JToolBar();
        panelToolBar = new javax.swing.JPanel();
        panelWindow = new javax.swing.JPanel();
        btnSettle = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        toolBar.setFloatable(false);
        toolBar.setRollover(true);

        panelToolBar.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING));
        toolBar.add(panelToolBar);

        panelWindow.setLayout(new java.awt.BorderLayout());

        btnSettle.setBackground(new java.awt.Color(150, 255, 150));
        btnSettle.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnSettle.setText("Settle");
        btnSettle.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 255, 50)));
        btnSettle.setContentAreaFilled(false);
        btnSettle.setOpaque(true);
        btnSettle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSettleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSettleMouseExited(evt);
            }
        });
        btnSettle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettleActionPerformed(evt);
            }
        });

        btnClose.setBackground(new java.awt.Color(150, 255, 150));
        btnClose.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnClose.setText("Close");
        btnClose.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 255, 50)));
        btnClose.setContentAreaFilled(false);
        btnClose.setOpaque(true);
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCloseMouseExited(evt);
            }
        });
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(panelWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSettle, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSettle, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.getRootPane().setBorder(BorderFactory.createLineBorder(SystemData.BORDER_COLOR, 2));

        Session session = HibernateUtil.getSessionFactory().openSession();
        Transaction transaction = session.beginTransaction();

        Query query = session.createQuery("from PaymentType pt order by pt.paymentTypeCode");
        List list = query.list();
        if (list.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No payment type available", "Unavailable", JOptionPane.INFORMATION_MESSAGE);
        } else {
            panelToolBar.removeAll();
            for (Object object : list) {
                if (object instanceof PaymentType) {
                    PaymentType paymentType = (PaymentType) object;
                    String text = paymentType.getPaymentTypeName();
                    String name = paymentType.getPaymentTypeCode();

                    JButton button = new JButton(text);
                    button.setName(name);
                    button.setPreferredSize(new Dimension(90, 35));
                    button.setBackground(SystemData.MOUSE_EXIT_COLOR);
                    button.setForeground(Color.BLACK);
                    button.setHorizontalAlignment(SwingConstants.CENTER);
                    Font font = new Font(Font.SANS_SERIF, Font.PLAIN, 12);
                    button.setFont(font);
                    button.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, SystemData.BORDER_COLOR));
                    button.setContentAreaFilled(false);
                    button.setOpaque(true);
                    panelToolBar.add(button);

                    button.addMouseListener(new PaymentButtonMouseListners());
                    button.addActionListener(new PaymentButtonActionListners(this, service, invoice));
                }
            }
            panelToolBar.revalidate();
            panelToolBar.repaint();
        }

        transaction.commit();
        session.close();
    }//GEN-LAST:event_formWindowOpened

    private void btnSettleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSettleMouseEntered
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_ENTER_COLOR);
    }//GEN-LAST:event_btnSettleMouseEntered

    private void btnSettleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSettleMouseExited
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_EXIT_COLOR);
    }//GEN-LAST:event_btnSettleMouseExited

    private void btnSettleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettleActionPerformed
        if (panelFrame instanceof CashSettlePanel) {
            Date date = new Date();
            CashSettlePanel cashSettlePanel = (CashSettlePanel) panelFrame;
            float nowPayingAmount = Float.parseFloat(cashSettlePanel.txtNowPaying.getText());
            float balanceAmount = Float.parseFloat(cashSettlePanel.txtBalance.getText());

            KeyCodeFunctions keyCodeFunctions = new KeyCodeFunctions();
            String paymentCode = keyCodeFunctions.getKey("PAY", "Payment");

            Payment payment = new Payment(paymentCode, invoice, new PaymentType(cashSettlePanel.getPaymentTypeCode()));
            if (balanceAmount < 0) {
                payment.setAmount(nowPayingAmount);
                service.setServiceStatus(this.serviceStatusMap.get("PARTIALLY PAID"));
            } else {
                payment.setAmount(nowPayingAmount - balanceAmount);
                service.setServiceStatus(this.serviceStatusMap.get("SETTLED"));
            }
            payment.setCreatedDate(date);
            payment.setCreatedTime(date);
            payment.setCreatedUser(MainFrame.user.getUserId());

            Session session = HibernateUtil.getSessionFactory().openSession();
            Transaction transaction = session.beginTransaction();

            session.saveOrUpdate(payment);

            session.saveOrUpdate(service);

            InformationDialog.showMessageBox("Playment done successfully", "Success", null);
            panelWindow.removeAll();

            final CashSettlePanel csettlePanel = new CashSettlePanel(service, this, "PTY1000");
            this.panelFrame = csettlePanel;
            this.panelWindow.add(this.panelFrame);
            this.panelWindow.revalidate();
            this.panelWindow.repaint();
            SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {
                    csettlePanel.txtNowPaying.requestFocus();
                }
            });

            Query query = session.createQuery("from Payment p where p.invoice = :inv order by p.paymentCode");
            query.setParameter("inv", this.invoice);

            List list = query.list();
            if (list.isEmpty()) {
                csettlePanel.txtTotalAmount.setText("" + service.getGrandTotal());
                csettlePanel.txtRemainingBalance.setText("" + service.getGrandTotal());
            } else {
                float paidAmount = 0.0f;
                for (Object tempPayment : list) {
                    if (tempPayment instanceof Payment) {
                        Payment tPayment = (Payment) tempPayment;
                        paidAmount += tPayment.getAmount();
                    }
                }
                csettlePanel.txtTotalAmount.setText("" + service.getGrandTotal());
                csettlePanel.txtPaidAmount.setText("" + paidAmount);
                csettlePanel.txtRemainingBalance.setText("" + (service.getGrandTotal() - paidAmount));
            }

            transaction.commit();
            session.close();
        }
    }//GEN-LAST:event_btnSettleActionPerformed

    private void btnCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseEntered
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_ENTER_COLOR);
    }//GEN-LAST:event_btnCloseMouseEntered

    private void btnCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseExited
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_EXIT_COLOR);
    }//GEN-LAST:event_btnCloseMouseExited

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    public javax.swing.JButton btnSettle;
    private javax.swing.JPanel mainPanel;
    public javax.swing.JPanel panelToolBar;
    public javax.swing.JPanel panelWindow;
    private javax.swing.JToolBar toolBar;
    // End of variables declaration//GEN-END:variables
    public JPanel panelFrame;
}
